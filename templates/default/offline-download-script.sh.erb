#!/bin/bash
#
# Sample AxonOps Package Download Script
# Generated by Chef
#
# NOTE: We recommend using the official downloader:
# https://github.com/axonops/axonops-installer-packages-downloader
#

set -e

DOWNLOAD_DIR="$(dirname "$0")"
REPO_URL="<%= @repository_url %>"

echo "Downloading AxonOps packages to: $DOWNLOAD_DIR"
echo ""
echo "WARNING: This is a sample script. For comprehensive downloads,"
echo "please use: https://github.com/axonops/axonops-installer-packages-downloader"
echo ""

# Detect OS and architecture
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
    VER=$VERSION_ID
else
    echo "Cannot detect OS version"
    exit 1
fi

ARCH=$(uname -m)
if [ "$ARCH" = "x86_64" ]; then
    ARCH="amd64"
elif [ "$ARCH" = "aarch64" ]; then
    ARCH="arm64"
fi

# Download function
download_package() {
    local url=$1
    local filename=$2
    
    echo "Downloading: $filename"
    if command -v wget > /dev/null; then
        wget -O "$DOWNLOAD_DIR/$filename" "$url"
    elif command -v curl > /dev/null; then
        curl -L -o "$DOWNLOAD_DIR/$filename" "$url"
    else
        echo "Neither wget nor curl found. Please install one of them."
        exit 1
    fi
}

# Example downloads (adjust versions and URLs as needed)
case $OS in
    ubuntu|debian)
        # Agent
        download_package \
            "${REPO_URL}/apt/pool/main/a/axon-agent/axon-agent_<%= @agent_version %>_${ARCH}.deb" \
            "axon-agent_<%= @agent_version %>_${ARCH}.deb"
        
        # Server
        download_package \
            "${REPO_URL}/apt/pool/main/a/axon-server/axon-server_<%= @server_version %>_${ARCH}.deb" \
            "axon-server_<%= @server_version %>_${ARCH}.deb"
        
        # Dashboard
        download_package \
            "${REPO_URL}/apt/pool/main/a/axon-dash/axon-dash_<%= @dashboard_version %>_${ARCH}.deb" \
            "axon-dash_<%= @dashboard_version %>_${ARCH}.deb"
        ;;
    
    centos|rhel|fedora)
        # Agent
        download_package \
            "${REPO_URL}/yum/el${VER%%.*}/${ARCH}/axon-agent-<%= @agent_version %>-1.el${VER%%.*}.${ARCH}.rpm" \
            "axon-agent-<%= @agent_version %>-1.el${VER%%.*}.${ARCH}.rpm"
        
        # Server
        download_package \
            "${REPO_URL}/yum/el${VER%%.*}/${ARCH}/axon-server-<%= @server_version %>-1.el${VER%%.*}.${ARCH}.rpm" \
            "axon-server-<%= @server_version %>-1.el${VER%%.*}.${ARCH}.rpm"
        
        # Dashboard
        download_package \
            "${REPO_URL}/yum/el${VER%%.*}/${ARCH}/axon-dash-<%= @dashboard_version %>-1.el${VER%%.*}.${ARCH}.rpm" \
            "axon-dash-<%= @dashboard_version %>-1.el${VER%%.*}.${ARCH}.rpm"
        ;;
    
    *)
        echo "Unsupported OS: $OS"
        exit 1
        ;;
esac

# Java Agent (platform independent)
download_package \
    "${REPO_URL}/files/java-agent/<%= @java_agent_version %>/<%= @java_agent_package %>.jar" \
    "<%= @java_agent_package %>-<%= @java_agent_version %>.jar"

# Cassandra tarball for AxonOps metrics storage
CASSANDRA_VERSION="<%= @cassandra_version || '5.0.4' %>"
download_package \
    "https://archive.apache.org/dist/cassandra/${CASSANDRA_VERSION}/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz" \
    "apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz"

# Elasticsearch tarball for AxonOps configuration storage
ELASTIC_VERSION="<%= @elastic_version || '7.17.16' %>"
download_package \
    "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ELASTIC_VERSION}-linux-${ARCH}.tar.gz" \
    "elasticsearch-${ELASTIC_VERSION}-linux-${ARCH}.tar.gz"

# Zulu JDK tarball
ZULU_VERSION="<%= @zulu_version || '17.0.9' %>"
ZULU_BUILD="<%= @zulu_build || '17.46.19-ca' %>"
if [ "$ARCH" = "amd64" ]; then
    ZULU_ARCH="x64"
else
    ZULU_ARCH="$ARCH"
fi
download_package \
    "https://cdn.azul.com/zulu/bin/zulu${ZULU_BUILD}-jdk${ZULU_VERSION}-linux_${ZULU_ARCH}.tar.gz" \
    "zulu${ZULU_BUILD}-jdk${ZULU_VERSION}-linux_${ZULU_ARCH}.tar.gz"

echo ""
echo "Download complete!"
echo ""
echo "To use these packages with Chef:"
echo "1. Copy all downloaded files to the target system at: <%= File.dirname(__FILE__) %>"
echo "2. Set the following Chef attributes:"
echo ""
echo "  node['axonops']['offline_install'] = true"
echo "  node['axonops']['offline_packages_path'] = '<%= File.dirname(__FILE__) %>'"
echo "  node['axonops']['packages']['agent'] = 'axon-agent_<%= @agent_version %>_${ARCH}.deb'"
echo "  node['axonops']['packages']['server'] = 'axon-server_<%= @server_version %>_${ARCH}.deb'"
echo "  node['axonops']['packages']['dashboard'] = 'axon-dash_<%= @dashboard_version %>_${ARCH}.deb'"
echo "  node['axonops']['packages']['java_agent'] = '<%= @java_agent_package %>-<%= @java_agent_version %>.jar'"