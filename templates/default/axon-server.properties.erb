# AxonOps Server Configuration
# Generated by Chef - Local modifications will be overwritten

# Server settings
server.address=<%= @listen_address %>
server.port=<%= @listen_port %>

# SSL/TLS Configuration
# server.ssl.enabled=false
# server.ssl.keystore=/etc/axonops/keystore.jks
# server.ssl.keystore.password=changeit
# server.ssl.truststore=/etc/axonops/truststore.jks
# server.ssl.truststore.password=changeit

# Elasticsearch connection
elasticsearch.url=<%= @elasticsearch_url %>
# elasticsearch.username=
# elasticsearch.password=
elasticsearch.index.prefix=axonops
elasticsearch.index.shards=3
elasticsearch.index.replicas=1

# Elasticsearch SSL
# elasticsearch.ssl.enabled=false
# elasticsearch.ssl.verify=true
# elasticsearch.ssl.keystore=/etc/axonops/es-keystore.jks
# elasticsearch.ssl.keystore.password=changeit

# Cassandra connection for metrics storage
cassandra.hosts=<%= @cassandra_hosts.join(',') %>
cassandra.port=9042
# cassandra.username=
# cassandra.password=
cassandra.keyspace=axonops_metrics
cassandra.replication.factor=3
cassandra.consistency.level=LOCAL_QUORUM

# Cassandra SSL
# cassandra.ssl.enabled=false
# cassandra.ssl.keystore=/etc/axonops/cassandra-keystore.jks
# cassandra.ssl.keystore.password=changeit

# Data retention settings
retention.metrics.days=30
retention.logs.days=7
retention.events.days=90
retention.backups.days=30

# Performance tuning
performance.threads.core=10
performance.threads.max=50
performance.queue.size=1000

# API settings
api.enabled=true
api.cors.enabled=true
api.cors.origins=*
api.rate.limit.enabled=true
api.rate.limit.requests.per.minute=1000

# Authentication
auth.enabled=true
auth.token.expiry.minutes=60
auth.session.timeout.minutes=30
# auth.ldap.enabled=false
# auth.ldap.url=ldap://localhost:389
# auth.ldap.base.dn=dc=example,dc=com
# auth.ldap.user.dn.pattern=uid={0},ou=people

# Notification settings
notifications.enabled=true
notifications.queue.size=10000
notifications.retry.attempts=3
notifications.retry.delay.seconds=60

# Email notifications
# notifications.email.enabled=false
# notifications.email.smtp.host=smtp.example.com
# notifications.email.smtp.port=587
# notifications.email.smtp.username=
# notifications.email.smtp.password=
# notifications.email.smtp.tls=true
# notifications.email.from=axonops@example.com

# Slack notifications
# notifications.slack.enabled=false
# notifications.slack.webhook.url=https://hooks.slack.com/services/...

# PagerDuty notifications
# notifications.pagerduty.enabled=false
# notifications.pagerduty.integration.key=

# Webhook notifications
# notifications.webhook.enabled=false
# notifications.webhook.url=https://example.com/webhook
# notifications.webhook.headers=Authorization: Bearer token

# Metrics aggregation
aggregation.enabled=true
aggregation.interval.seconds=60
aggregation.retention.raw.hours=24
aggregation.retention.hourly.days=7
aggregation.retention.daily.days=90

# Backup settings
backup.enabled=true
backup.storage.path=/var/lib/axonops/backups
backup.retention.days=30
backup.compression.enabled=true
backup.encryption.enabled=false
# backup.encryption.key=

# S3 backup storage
# backup.s3.enabled=false
# backup.s3.bucket=axonops-backups
# backup.s3.region=us-east-1
# backup.s3.access.key=
# backup.s3.secret.key=
# backup.s3.endpoint=

# Logging
logging.level=INFO
logging.file=<%= @log_dir %>/axon-server.log
logging.max.size=100MB
logging.max.files=10
logging.pattern=%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n

# JVM settings
jvm.heap.min=1g
jvm.heap.max=4g
jvm.gc.log.enabled=true
jvm.gc.log.file=<%= @log_dir %>/axon-server-gc.log

# Advanced settings
advanced.data.dir=<%= @data_dir %>
advanced.temp.dir=/tmp/axonops
advanced.cache.size.mb=512
advanced.connection.timeout.seconds=30
advanced.request.timeout.seconds=60
advanced.shutdown.timeout.seconds=30

# Cluster settings (for HA deployments)
# cluster.enabled=false
# cluster.node.id=node1
# cluster.seeds=node1:9300,node2:9300
# cluster.port=9300
# cluster.replication.factor=2